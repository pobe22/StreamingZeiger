@model StreamingZeiger.ViewModels.MovieIndexViewModel

@{
    var total = Model.Total;
    var page = Model.Page;
    var pageSize = Model.PageSize;
    var totalPages = (int)Math.Ceiling(total / (double)pageSize);
}

<div class="container mt-4">
    <h1 class="mb-4">Filme</h1>

    <!-- Toggle-Button -->
    <button id="toggleSearchBtn" class="btn btn-outline-secondary mb-3">Filter einblenden</button>

    <!-- Such- und Filterformular -->
    <div id="searchForm" style="display:none;">
        <form id="filterForm" method="post" asp-action="Search" class="row g-3 mb-4">
            <div class="col-md-4">
                <input asp-for="Query" class="form-control" placeholder="Suche nach Titel, Cast ..." />
            </div>
            <div class="col-md-2">
                <input asp-for="YearFrom" type="number" class="form-control" placeholder="ab Jahr" />
            </div>
            <div class="col-md-2">
                <input asp-for="YearTo" type="number" class="form-control" placeholder="bis Jahr" />
            </div>
            <div class="col-md-2">
                <select asp-for="Genre" asp-items="ViewBag.Genres" class="form-select" id="categoryFilter">
                    <option value="">Alle Genres</option>
                </select>
            </div>
            <div class="col-md-2">
                <select asp-for="Service" asp-items="ViewBag.Services" class="form-select" id="typeFilter">
                    <option value="">Alle Dienste</option>
                </select>
            </div>
            <div class="col-md-2">
                <select asp-for="MinRating" class="form-select" id="ratingFilter">
                    <option value="">Alle Bewertungen</option>
                    <option value="5">5+</option>
                    <option value="7">7+</option>
                    <option value="9">9+</option>
                </select>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-primary w-100">Filtern</button>
            </div>
        </form>
    </div>

    <!-- Clientseitige Titel-Suche -->
    <div class="mb-3">
        <input type="text" id="titleSearch" class="form-control" placeholder="Filmtitel filtern (clientseitig)">
    </div>

    <!-- Film-Grid -->
    <div id="movieList" class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
        <!-- Arbeitsauftrag Aufgabe 4 -->
        @foreach (var movie in Model.Movies)
        {
            <div class="col movie" data-title="@movie.Title">
                @await Html.PartialAsync("_MovieCard", movie)
            </div>
        }
    </div>

    <!-- Pagination -->
    <nav class="mt-4">
        <ul class="pagination justify-content-center">
            <li class="page-item @(page == 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { Page = page - 1, Genre = Model.Genre, Service = Model.Service, MinRating = Model.MinRating, YearFrom = Model.YearFrom, YearTo = Model.YearTo, Query = Model.Query })">Vorherige</a>
            </li>
            @for (var i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == page ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { Page = i, Genre = Model.Genre, Service = Model.Service, MinRating = Model.MinRating, YearFrom = Model.YearFrom, YearTo = Model.YearTo, Query = Model.Query })">@i</a>
                </li>
            }
            <li class="page-item @(page == totalPages ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { Page = page + 1, Genre = Model.Genre, Service = Model.Service, MinRating = Model.MinRating, YearFrom = Model.YearFrom, YearTo = Model.YearTo, Query = Model.Query })">Nächste</a>
            </li>
        </ul>
    </nav>
</div>

@section Scripts {
    <script src="~/js/search.js"></script>
}