@model StreamingZeiger.Models.Movie
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@using System.Net

@{
    var recommendedMovies = ViewBag.RecommendedMovies as List<StreamingZeiger.Models.Movie>;
    int chunkSize = 4; // 4 Filme pro Slide
    var chunks = recommendedMovies != null
                 ? recommendedMovies.Select((m, i) => new { Movie = m, Index = i })
                                     .GroupBy(x => x.Index / chunkSize)
                                     .Select(g => g.Select(x => x.Movie).ToList())
                                     .ToList()
                 : new List<List<StreamingZeiger.Models.Movie>>();

    ViewData["Title"] = Model.Title;
    var userId = UserManager.GetUserId(User);
    var userRating = Model.Ratings?.FirstOrDefault(r => r.UserId == userId)?.Score;
    bool inWatchlist = ViewBag.InWatchlist as bool? ?? false;
    var currentUrl = Context.Request.Path + Context.Request.QueryString;
}

<div class="container mt-4">
    <div class="row">
        <!-- Poster -->
        <div class="col-md-4">
            <img src="@Url.Content(Model.PosterFile)" alt="@Model.Title Poster" class="img-fluid rounded shadow" />
        </div>

        <!-- Informationen -->
        <div class="col-md-8">
            <h2>@Model.Title (@Model.Year)</h2>
            <h5 class="text-muted">Originaltitel: @Model.OriginalTitle</h5>
            <p class="mt-3">@Model.Description</p>

            <ul class="list-unstyled">
                <li>
                    <strong>Genre:</strong>
                    @foreach (var g in Model.MediaGenres.Select(mg => mg.Genre.Name))
                    {
                        <span class="badge bg-secondary me-1">@g</span>
                    }
                </li>
                <li><strong>Dauer:</strong> @Model.DurationMinutes Min.</li>
                <li><strong>Regie:</strong> @Model.Director</li>
                <li><strong>Cast:</strong> @string.Join(", ", Model.Cast)</li>
            </ul>

            <!-- Verfügbarkeit -->
            <p>
                <strong>Verfügbar bei:</strong>
                @foreach (var s in Model.AvailabilityByService.Where(x => x.Value))
                {
                    <span class="badge bg-primary me-1">@s.Key</span>
                }
            </p>

            <!-- IMDb Rating -->
            <div class="my-3">
                <strong>IMDb Bewertung:</strong>
                <span class="text-warning">
                    @for (int i = 1; i <= 5; i++)
                    {
                        if (i <= Math.Round(Model.Rating / 2))
                        {
                            <i class="bi bi-star-fill"></i>
                        }
                        else
                        {
                            <i class="bi bi-star"></i>
                        }
                    }
                </span>
                <span class="ms-2">(@Model.Rating.ToString("0.0") / 10)</span>
            </div>
            <!-- Zusatz: User-Bewertung (Ajax) -->
            @if (SignInManager.IsSignedIn(User))
            {
                <div class="my-3">
                    <strong>Deine Bewertung:</strong>
                    <span id="userStars" class="text-warning">
                        @for (int i = 1; i <= 5; i++)
                        {
                            if (i <= userRating.GetValueOrDefault())
                            {
                                <i class="bi bi-star-fill"></i>
                            }
                            else
                            {
                                <i class="bi bi-star"></i>
                            }
                        }
                    </span>
                    <span id="userScore" class="ms-2">
                        @(userRating.HasValue ? $"{userRating.Value} / 5" : "Noch nicht bewertet")
                    </span>
                </div>

                <h5>Bewertung abgeben</h5>
                <div class="d-flex align-items-center mb-3">
                    <select id="ratingSelect" class="form-select w-auto me-2">
                        @for (int i = 1; i <= 5; i++)
                        {
                            var isSelected = userRating == i;
                            <option value="@i" selected="@(isSelected ? "selected" : null)">@i</option>
                        }
                    </select>
                    <button id="ratingBtn" class="btn btn-primary btn-sm" data-media-id="@Model.Id">Speichern</button>
                </div>

                <!-- Community Bewertung -->
                <div class="my-3">
                    <strong>Community Bewertung:</strong>
                    <span id="averageStars" class="text-warning">
                        @if (Model.Ratings != null && Model.Ratings.Any())
                        {
                            var avg = Model.Ratings.Average(r => r.Score);
                            for (int i = 1; i <= 5; i++)
                            {
                                if (i <= avg)
                                {
                                    <i class="bi bi-star-fill"></i>
                                }
                                else
                                {
                                    <i class="bi bi-star"></i>
                                }
                            }
                        }
                        else
                        {
                            <span>Noch keine Bewertungen</span>
                        }
                    </span>
                    <span id="voteCount" class="ms-2">
                        @(Model.Ratings?.Count ?? 0) Stimmen
                    </span>
                </div>

                @if (!inWatchlist)
                {
                    <a asp-controller="Watchlist"
                       asp-action="Add"
                       asp-route-mediaItemId="@Model.Id"
                       asp-route-returnUrl="@currentUrl"
                       class="btn btn-success btn-sm">
                        Zur Watchlist hinzufügen
                    </a>
                }
                else
                {
                    <a asp-controller="Watchlist"
                       asp-action="Remove"
                       asp-route-mediaItemId="@Model.Id"
                       asp-route-returnUrl="@currentUrl"
                       class="btn btn-danger btn-sm">
                        Aus Watchlist entfernen
                    </a>
                }
            }
            else
            {
                <p><a asp-controller="Account" asp-action="Login">Login</a>, um Filme zu bewerten oder zur Watchlist hinzuzufügen.</p>
            }

            <div class="social-share mt-3">
                @{
                    var movieUrl = $"{Context.Request.Scheme}://{Context.Request.Host}{Url.Action("Details", "Movies", new { id = Model.Id })}";
                    var encodedUrl = WebUtility.UrlEncode(movieUrl);
                    var encodedText = WebUtility.UrlEncode($"{Model.Title} - {movieUrl}");
                }

                <a href="https://www.facebook.com/sharer/sharer.php?u=@encodedUrl"
                   target="_blank" class="btn btn-primary">
                    Teilen auf Facebook
                </a>

                <a href="https://twitter.com/intent/tweet?text=@encodedText"
                   target="_blank" class="btn btn-primary">
                    Tweeten
                </a>

                <a href="https://wa.me/?text=@encodedText"
                   target="_blank" class="btn btn-primary">
                    Teilen auf WhatsApp
                </a>
            </div>

        </div>
        <!-- Trailer -->
        @if (!string.IsNullOrWhiteSpace(Model.TrailerUrl))
        {
            <div class="row mt-5">
                <div class="col-12">
                    <h3>Trailer</h3>
                    <div class="ratio ratio-16x9">
                        <iframe src="@Model.TrailerUrl" title="Trailer" allowfullscreen></iframe>
                    </div>
                </div>
            </div>
        }

        <!-- Empfehlungen -->
        <div class="row mt-5">
            <div class="col-12">
                <h3>
                    Weitere Filme mit
                    @string.Join(", ", Model.Genres.Select(g => g.Name))
                </h3>

                <div id="recommendCarousel" class="carousel slide" data-bs-ride="carousel">
                    <div class="carousel-inner">
                        @for (int i = 0; i < chunks.Count; i++)
                        {
                            var slide = chunks[i];
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <div class="row">
                                    @foreach (var movie in slide)
                                    {
                                        <div class="col-md-3 mb-3">
                                            <div class="card h-100">
                                                <img src="@Url.Content(movie.PosterFile)"
                                                     class="card-img-top"
                                                     alt="@movie.Title" />
                                                <div class="card-body text-center">
                                                    <h6 class="card-title">@movie.Title</h6>
                                                    <a href="@Url.Action("Details", "Movies", new { id = movie.Id })"
                                                       class="btn btn-sm btn-outline-primary">Details</a>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>

                    <button class="carousel-control-prev" type="button" data-bs-target="#recommendCarousel" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#recommendCarousel" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/ratingajax.js"></script>
}